Use `./build.sh` to build CiCo and `./run.sh` to run it if using the command line. You can otherwise use your IDE to build and run CiCo.

# Module 2: Sample test for the happy path. 

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.
3. Wait 11 seconds.

## Expected results:
* The status panel should appear after step 2.
* The main panel should appear after step 3.

# Module 2: Sample test for invalid card numbers.

## Test steps
1. Build and run CiCo.
2. Enter 99999999 into the field and click Update.
3. Wait 11 seconds.

## Expected results:
* The error panel should appear after step 2.
* The main panel should appear after step 3.

# Module 2: Help users recognize, diagnose, and recover from errors

## Test steps
1. Build and run CiCo.
2. Enter 99999999 into the field and click Update.

## Expected results
* The panel should display "Please show your card to staff to validate." after step 2.

# Module 2: Help and documentation

## Test steps
1. Build and run CiCo.

## Expected results
* The version number should be displayed after "CiCo" at the bottom.


# Module 3: Visibility of system status 

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.
3. Wait for status panel to close.
4. Enter 00000000 into the field and click Update.

## Expected results
* Should display "Checked IN" after step 2.
* Should display "Checked OUT" after step 4.

# Module 3: Match between system and the real world

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.

## Expected results
* Should display "Developer" for the user name.

# Module 4: Visibility of system status (Ticket 401 - Restrict Card Field Input)

## Test steps
1. Build and run CiCo.
2. Enter "abcd" into the card field.
3. Enter "1234abcd5678" into the card field.

## Expected results
* The field should remain empty after step 2.
* The field should only display "12345678" after step 3 (letters should be ignored).

# Module 4: Match between system and the real world (Ticket 402 - Limit Card Number Length)

## Test steps
1. Build and run CiCo.
2. Enter "1234567890" (10-digit card number) into the card field.
3. Enter "12345678" (8-digit card number) into the card field.

## Expected results
* The field should only display "12345678" when entering "1234567890".
* The field should fully accept "12345678" since it is within the limit.

# Module 5: Error prevention (Ticket 502 - Close Application When Window Closes)

## Test steps
1. Build and run CiCo.
2. Close the application window by clicking the X button.
3. Observe the console output and application status.

## Expected results
* The application should fully terminate when the window is closed.
* No additional steps should be needed to quit the application.
* The console should show a 'Clean shutdown' message.
* The IDE run indicator should stop (play button becomes available again).

# Module 6: User interface color scheme

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.

## Expected results
* Color scheme should be monochromatic primarily using neutral colors.